# Workflow derived from https://github.com/r-lib/actions/tree/v2/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help
on:
  push:
    branches: [main]
    tags:
      - "**" # Push events to every tag including hierarchical tags like v1.0/beta
  workflow_dispatch:

name: Release

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  build:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.arch }} (${{ matrix.config.r }})

    permissions:
      contents: write

    strategy:
      fail-fast: false
      matrix:
        config:
          - {
              os: macos-latest,
              r: "release",
              arch: "nightly-aarch64-apple-darwin",
              binary: "yes",
            }
          - {
              os: macos-latest,
              r: "release",
              arch: "nightly-x86_64-apple-darwin",
              binary: "yes",
            }
          - {
              os: windows-latest,
              r: "release",
              arch: "nightly-x86_64-pc-windows-gnu",
              rtools-version: "42",
            }
          - {
              os: ubuntu-latest,
              r: "release",
              arch: "nightly-x86_64-unknown-linux-gnu",
            }

    steps:
      - uses: actions/checkout@v3

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: "nightly"

      - name: set cross compile target for M1
        if: matrix.config.arch == 'nightly-aarch64-apple-darwin'
        shell: bash
        run: |
          rustup toolchain install nightly-aarch64-apple-darwin
          rustup default nightly-aarch64-apple-darwin

      - name: Cache Rust
        if: matrix.config.arch != 'nightly-aarch64-apple-darwin'
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: ./src/rust/
          cache-on-failure: "true"

      - name: pre-compile rpolars
        shell: bash
        run: |
          cargo build --lib --release

      - uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-r@v2
        if: matrix.config.arch != 'nightly-aarch64-apple-darwin'
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true
          rtools-version: ${{ matrix.config.rtools-version }}
          Ncpus: 2

      - name: Install ubuntu SYSTEM REQUIREMENTS
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update \
          && sudo apt-get install -y \
            libfontconfig1-dev \
            libfreetype6-dev \
            libfribidi-dev \
            libharfbuzz-dev \
            libcurl4-openssl-dev \
            libgit2-dev \
            libicu-dev \
            libjpeg-dev \
            libpng-dev \
            libtiff-dev \
            libxml2-dev \
            libssl-dev

      - uses: r-lib/actions/setup-r-dependencies@v2
        if: matrix.config.arch != 'nightly-aarch64-apple-darwin'
        with:
          extra-packages: any::rcmdcheck
          needs: check
          pak-version: devel
        env:
          CI: false

      - name: build package + test
        if: matrix.config.arch != 'nightly-aarch64-apple-darwin'
        run: |
          devtools::install(quick = TRUE)
          devtools::test(stop_on_failure = TRUE)
        shell: Rscript {0}

      - name: build binary
        if: matrix.config.arch != 'nightly-aarch64-apple-darwin'
        run: |
          fn = devtools::build(binary = TRUE, args = c('--preclean'))
          if (R.version$os != "mingw32") {
            newfn = paste0(substr(fn,1,regexpr("_",fn)),"_",R.version$platform,".",tools::file_ext(fn))
            file.rename(fn,newfn)
          } else {
            file.rename(fn,"../rpolars.zip") #R expects specific windows binary filename
          }
        shell: Rscript {0}

      - name: Release binary
        if: matrix.config.binary == 'yes'
        shell: bash
        run: |
          echo "also releasing binary"
          cp ./src/rust/target/release/librpolars.a ../rpolars_binary_${arch_name}.a
          ls -a
        env:
          arch_name: ${{ matrix.arch }}

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/') && github.event_name != 'pull_request'
        with:
          files: |
            ../rpolars_*
            ../rpolars.zip
            ../rpolars_binary_*

      - name: print files
        run: print(list.files("..",recursive = TRUE,full.names=TRUE))
        shell: Rscript {0}

      - name: print wd
        run: print(getwd())
        shell: Rscript {0}
